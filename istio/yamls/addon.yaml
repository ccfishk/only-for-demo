apiVersion: addonmgr.keikoproj.io/v1alpha1
kind: Addon
metadata:
  name: istio
  namespace: addon-manager-system
spec:
  secrets:
    - name: aviso-appid
    - name: aviso-secret
  pkgChannel: istio-installer
  pkgName: istio-addon
  pkgVersion: v2.1.10
  pkgType: composite
  pkgDeps:
    prometheus: "*"
  pkgDescription: istio addon
  params:
    namespace: addon-istio-installer-ns
    context:
      clusterName: jimin-argo-mesh
      clusterRegion: us-west-2
    data:
      iamrole: jimin-argo-mesh-istio-pilot
      vpcId: vpc-0787dd745fc6734d7
      clusterPrivateSubnets: >-
        [subnet-07bb649ff2be8975e subnet-0a441e7896b75e192
        subnet-0521c90adccd8b37d]
      addon_version: v2.1.10
      mesh_version: 1.10.43
      aviso_host: aviso-e2e.api.intuit.com
  lifecycle:
    prereqs:
      template: |
        apiVersion: argoproj.io/v1alpha1
        kind: Workflow
        metadata:
          labels:
            workflows.argoproj.io/controller-instanceid: addon-manager-workflow-controller
        spec:
          activeDeadlineSeconds: 600
          entrypoint: entry
          serviceAccountName: addon-manager-workflow-installer-sa
          templates:
          - name: entry
            retryStrategy:
              limit: 2
              retryPolicy: "Always"
            steps:
            - - name: prereq-resources
                template: submit
                arguments:
                  artifacts:
                  - name: doc
                    path: /tmp/doc
                    raw:
                      data: |
                        apiVersion: v1
                        kind: Namespace
                        metadata:
                          name: "addon-istio-installer-ns"
                          annotations:
                            iks.intuit.com/managed: "false"
                            iks.intuit.com/allowed-igs: "system"
                        ---
                        apiVersion: v1
                        kind: ServiceAccount
                        metadata:
                          labels:
                            k8s-addon: istio-installer.addons.k8s.io
                            k8s-app: istio-installer
                          name: istio-installer
                          namespace: "addon-istio-installer-ns"
                          annotations:
                            eks.amazonaws.com/role-arn: arn:aws:iam::663374536332:role/istio-installer-role-jimin-argo-mesh
                        ---
                        apiVersion: rbac.authorization.k8s.io/v1
                        kind: ClusterRole
                        metadata:
                          name: istio-installer
                          labels:
                            k8s-addon: istio-installer.addons.k8s.io
                            k8s-app: istio-installer
                        rules:
                        - apiGroups: ["*"]
                          resources: ["*"]
                          verbs: ["*"]
                        ---
                        apiVersion: rbac.authorization.k8s.io/v1
                        kind: Role
                        metadata:
                          name: istio-installer
                          namespace: "addon-istio-installer-ns"
                          labels:
                            k8s-addon: istio-installer.addons.k8s.io
                            k8s-app: istio-installer
                        rules:
                        - apiGroups: ["*"]
                          resources: ["*"]
                          verbs: ["*"]
                        ---
                        apiVersion: rbac.authorization.k8s.io/v1
                        kind: ClusterRoleBinding
                        metadata:
                          name: istio-installer
                          labels:
                            k8s-addon: istio-installer.addons.k8s.io
                            k8s-app: istio-installer
                        roleRef:
                          apiGroup: rbac.authorization.k8s.io
                          kind: ClusterRole
                          name: istio-installer
                        subjects:
                          - kind: ServiceAccount
                            name: istio-installer
                            namespace: "addon-istio-installer-ns"

                        ---
                        apiVersion: rbac.authorization.k8s.io/v1
                        kind: RoleBinding
                        metadata:
                          name: istio-installer
                          namespace: "addon-istio-installer-ns"
                          labels:
                            k8s-addon: istio-installer.addons.k8s.io
                            k8s-app: istio-installer
                        roleRef:
                          apiGroup: rbac.authorization.k8s.io
                          kind: Role
                          name: istio-installer
                        subjects:
                          - kind: ServiceAccount
                            name: istio-installer
                            namespace: "addon-istio-installer-ns"
                        
            - - name: wait-ig
                template: wait-ig

          - name: submit
            inputs:
              artifacts:
                - name: doc
                  path: /tmp/doc
            container:
              image: docker.intuit.com/dev/patterns/kubernetes/dev/kubectl-awscli:v1.21.10
              command: [sh, -c]
              args: ["kubectl apply -f /tmp/doc"]

          - name: wait-ig
            successCondition: status.currentState == Ready
            failureCondition: status.currentState == Error
            retryStrategy:
              limit: 5
              backoff:
                duration: "30"
                factor: 2
                maxDuration: "16m"
            resource:
             action: get
             manifest: |
              apiVersion: instancemgr.keikoproj.io/v1alpha1
              kind: InstanceGroup
              metadata:
                name: istio
                namespace: "addon-istio-installer-ns"
    install:
      template: |
        apiVersion: argoproj.io/v1alpha1
        kind: Workflow
        metadata:
          labels:
            workflows.argoproj.io/controller-instanceid: addon-manager-workflow-controller
        spec:
          activeDeadlineSeconds: 900
          entrypoint: entry
          serviceAccountName: addon-manager-workflow-installer-sa
          templates:
          - name: entry
            retryStrategy:
              limit: 2
              retryPolicy: "Always"
            steps:
            - - name: delete-jobs
                template: delete-jobs
            - - name: prereq-resources
                template: submit
                arguments:
                  artifacts:
                  - name: doc
                    path: /tmp/doc
                    raw:
                      data: |
                        apiVersion: batch/v1
                        kind: Job
                        metadata:
                          name: istio-installer
                          namespace: "addon-istio-installer-ns"
                          labels:
                            app: istio-installer
                        spec:
                          template:
                            metadata:
                              labels:
                                app: istio-installer
                            spec:
                              serviceAccountName: istio-installer
                              restartPolicy: Never
                              containers:
                                - image: docker.intuit.com/services/mesh/mesh-aviso/service/ballast:v2.1.10
                                  name: istio-installer
                                  resources:
                                    limits:
                                      cpu: 1
                                      memory: 1Gi
                                    requests:
                                      cpu: 300m
                                      memory: 500Mi
                                  env:
                                    - name: MESH_VERSION
                                      value:  "1.10.43"
                                    - name: AWS_REGION
                                      value: "us-west-2"
                                    - name: CLUSTER_NAME
                                      value: "jimin-argo-mesh"
                                    - name: CLUSTER_ENV
                                      value: "preprod"
                                    - name: CLUSTER_SHORT_NAME
                                      value: "jimin-argo-mesh"
                                    - name: ACCOUNT_NUMBER
                                      value: "663374536332"
                                    - name: API_SERVER_URL
                                      value: "https://eksapi-jimin-argo-mesh-36b18be574427492.elb.us-west-2.amazonaws.com"
                                    - name: VPC_ID
                                      value: "vpc-0787dd745fc6734d7"
                                    - name: PRIVATE_SUBNETS
                                      value: "[subnet-07bb649ff2be8975e subnet-0a441e7896b75e192 subnet-0521c90adccd8b37d]"
                                    - name: IKS_VERSION
                                      value: "v2.19.0-dev"
                                  volumeMounts:
                                    - name: ssl-certs
                                      mountPath: /etc/ssl/certs/ca-certificates.crt
                                      readOnly: true
                                  imagePullPolicy: "Always"
                              securityContext:
                                fsGroup: 65534
                              volumes:
                                - name: ssl-certs
                                  hostPath:
                                    path: "/etc/ssl/certs/ca-bundle.crt"


            - - name: wait-for-installer-job
                template: wait-for-installer-job

          - name: delete-jobs
            container:
              image: docker.intuit.com/dev/patterns/kubernetes/dev/kubectl-awscli:v1.21.10
              command: [sh, -c]
              args: ["kubectl delete job -n addon-istio-installer-ns --all"]
          - name: submit
            inputs:
              artifacts:
                - name: doc
                  path: /tmp/doc
            container:
              image: docker.intuit.com/dev/patterns/kubernetes/dev/kubectl-awscli:v1.21.10
              command: [sh, -c]
              args: ["kubectl apply -f /tmp/doc"]

          - name: wait-for-installer-job
            container:
              image: docker.intuit.com/dev/patterns/kubernetes/dev/kubectl-awscli:v1.21.10
              command: [sh, -c]
              args: ["kubectl wait --for=condition=complete --timeout=10m job/istio-installer -n addon-istio-installer-ns"]
    delete:
      template: |
        apiVersion: argoproj.io/v1alpha1
        kind: Workflow
        metadata:
          labels:
            workflows.argoproj.io/controller-instanceid: addon-manager-workflow-controller
        spec:
          activeDeadlineSeconds: 600
          entrypoint: delete-wf
          serviceAccountName: addon-manager-workflow-installer-sa

          templates:
            - name: delete-wf
              retryStrategy:
                limit: 2
                retryPolicy: "Always"
              steps:
                - - name: delete-istio
                    template: submit
                    arguments:
                      artifacts:
                      - name: doc
                        path: /tmp/doc
                        raw:
                          data: |
                            apiVersion: batch/v1
                            kind: Job
                            metadata:
                              name: istio-reaper
                              namespace: "addon-istio-installer-ns"
                              labels:
                                app: istio-reaper
                            spec:
                              template:
                                metadata:
                                  labels:
                                    app: istio-reaper
                                spec:
                                  serviceAccountName: istio-installer
                                  restartPolicy: Never
                                  containers:
                                    - image: docker.intuit.com/services/mesh/mesh-aviso/service/ballast:v2.1.10
                                      name: istio-reaper
                                      args: ["delete"]
                                      resources:
                                        limits:
                                          cpu: 1
                                          memory: 1Gi
                                        requests:
                                          cpu: 300m
                                          memory: 500Mi
                                      env:
                                        - name: MESH_VERSION
                                          value:  "1.10.43"
                                        - name: AWS_REGION
                                          value: "us-west-2"
                                        - name: CLUSTER_NAME
                                          value: "jimin-argo-mesh"
                                        - name: CLUSTER_ENV
                                          value: "preprod"
                                        - name: CLUSTER_SHORT_NAME
                                          value: "jimin-argo-mesh"
                                        - name: ACCOUNT_NUMBER
                                          value: "663374536332"
                                        - name: API_SERVER_URL
                                          value: "https://eksapi-jimin-argo-mesh-36b18be574427492.elb.us-west-2.amazonaws.com"                                        
                                        - name: IKS_VERSION
                                          value: "v2.19.0-dev"
                                      volumeMounts:
                                        - name: ssl-certs
                                          mountPath: /etc/ssl/certs/ca-certificates.crt
                                          readOnly: true
                                      imagePullPolicy: "Always"
                                  securityContext:
                                    fsGroup: 65534
                                  volumes:
                                    - name: ssl-certs
                                      hostPath:
                                        path: "/etc/ssl/certs/ca-bundle.crt"
                - - name: wait-for-job
                    template: wait-for-job

                - - name: delete-namespaces-and-ig
                    template: delete-namespaces-and-ig

            - name: submit
              inputs:
                artifacts:
                  - name: doc
                    path: /tmp/doc
              container:
                image: docker.intuit.com/dev/patterns/kubernetes/dev/kubectl-awscli:v1.21.10
                command: [sh, -c]
                args: ["kubectl apply -f /tmp/doc"]

            - name: wait-for-job
              container:
                image: docker.intuit.com/dev/patterns/kubernetes/dev/kubectl-awscli:v1.21.10
                command: [sh, -c]
                args: ["kubectl wait --for=condition=complete --timeout=10m job/istio-reaper -n addon-istio-installer-ns"]

            - name: delete-namespaces-and-ig
              container:
                image: docker.intuit.com/dev/patterns/kubernetes/dev/kubectl-awscli:v1.21.10
                command: [sh, -c]
                args: ["kubectl delete all -l chart=istio -n istio-system;
                        kubectl delete ns istio-system;
                        kubectl delete instancegroup istio -n addon-istio-installer-ns;
                        kubectl delete ns addon-istio-installer-ns;
                        kubectl delete ns admiral-sync"]
